{"version":3,"file":"static/js/631.dbd54cc5.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","redux/filter/selectors.js","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Error/Error.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contact_container\":\"ContactForm_contact_container__iDfmG\",\"username_input\":\"ContactForm_username_input__8YYLr\",\"usertel_input\":\"ContactForm_usertel_input__lYRRH\",\"username_label\":\"ContactForm_username_label__7hlP7\",\"usertel_label\":\"ContactForm_usertel_label__zl2Y3\",\"add_button\":\"ContactForm_add_button__HoPGx\",\"errors\":\"ContactForm_errors__BKLdE\"};","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactForm.module.css';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContacts } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { TextField } from '@mui/material';\n\nconst usernameInputId = nanoid();\nconst usertelInputId = nanoid();\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const contactExist = contacts.some(contact => contact.name === name);\n    if (contactExist) {\n      alert('Contact already exist!');\n      form.reset();\n    } else {\n      dispatch(addContacts({ name, number }));\n      form.reset();\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit}>\n        <div className={css.contact_container}>\n          <TextField\n            label=\"Please, write name\"\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"name\"\n            id={usernameInputId}\n            pattern=\"[a-zA-Z \\-']{2,30}\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n\n          <TextField\n            label=\"Please, write number\"\n            variant=\"outlined\"\n            type=\"tel\"\n            name=\"number\"\n            id={usertelInputId}\n            pattern=\"^\\+?[0-9 \\-\\(\\)]{7,20}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n\n          <button type=\"submit\" className={css.add_button}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"span_container\":\"ContactItem_span_container__yRF80\",\"item_span\":\"ContactItem_item_span__Pv1TF\",\"item_button\":\"ContactItem_item_button__pEcHX\"};","import css from './ContactItem.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from '../../redux/contacts/operations';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const onDelete = id => {\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <>\n      <div className={css.span_container}>\n        <span className={css.item_span}>{name}:</span>\n        <span className={css.item_span}>{number}</span>\n        <button\n          className={css.item_button}\n          type=\"button\"\n          onClick={() => onDelete(id)}\n        >\n          Delete\n        </button>\n      </div>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactItem;\n","export const selectFilterStatus = state => state.filter.value;\n","import ContactItem from 'components/ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { selectFilterStatus } from '../../redux/filter/selectors';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilterStatus) || '';\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <ul>\n      {contacts\n        .filter(contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        )\n        .map(filteredContact => {\n          return (\n            <ContactItem\n              key={filteredContact.id}\n              id={filteredContact.id}\n              name={filteredContact.name}\n              number={filteredContact.phone}\n            />\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter_input\":\"Filter_filter_input__eu2zm\",\"filter_label\":\"Filter_filter_label__5ITod\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { findNumber } from '../../redux/filter/filtersSlice';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const onFilter = event => {\n    dispatch(findNumber(event.currentTarget.value));\n  };\n  return (\n    <>\n      <TextField\n        label=\"Write name here\"\n        variant=\"standard\"\n        type=\"text\"\n        id=\"filter\"\n        name=\"filter\"\n        onChange={onFilter}\n        className={css.filter_input}\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {};\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\nimport { selectError } from '../../redux/contacts/selectors';\n\nconst Error = () => {\n  const errorMessage = useSelector(selectError);\n\n  return <div>{errorMessage}</div>;\n};\n\nexport default Error;\n","import ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport React from 'react';\nimport Loader from '../components/Loader/Loader';\nimport Error from '../components/Error/Error';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from '../redux/contacts/selectors';\nimport { Helmet } from 'react-helmet';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <>\n      <Helmet>Contacts</Helmet>\n      {isLoading && <Loader />}\n      <div className=\"main-div\">\n        {error && <Error />}\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","usernameInputId","nanoid","usertelInputId","useSelector","dispatch","useDispatch","_jsx","_Fragment","children","onSubmit","event","preventDefault","form","currentTarget","name","elements","value","number","some","contact","alert","reset","addContacts","_jsxs","className","css","TextField","label","variant","type","id","pattern","title","required","_ref","onClick","deleteContacts","onDelete","selectFilterStatus","filter","useEffect","fetchContacts","toLowerCase","includes","map","filteredContact","ContactItem","phone","onChange","findNumber","errorMessage","Helmet","Loader","Error","ContactForm","Filter","ContactList"],"sourceRoot":""}